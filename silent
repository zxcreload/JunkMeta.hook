-- SETTINGS
local Keybind = Enum.KeyCode.C
local JumpOffset = 0.07
local FallOffset = 0.07 -- Параметр для падения
local Prediction = 0.141245121
local PredictionMode = "MoveDirection" -- Режим предсказания: "Velocity", "MoveDirection", "CalculateCFrame"
local TracerColor = Color3.fromRGB(255, 50, 50) -- Цвет трейсера
local TracerThickness = 1.5                     -- Толщина линии
local TracerTransparency = 0.7                  -- Прозрачность

-- SERVICES
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

-- VARIABLES
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local Mouse = LocalPlayer:GetMouse()
local Target = nil
local Character = LocalPlayer.Character
local TracerLine = nil
local LastPosition = nil -- Для CalculateCFrame
local LastTime = nil    -- Для CalculateCFrame

-- Создаем трейсер через Drawing API
local function CreateTracer()
    if TracerLine then TracerLine:Remove() end
    TracerLine = Drawing.new("Line")
    TracerLine.Color = TracerColor
    TracerLine.Thickness = TracerThickness
    TracerLine.Transparency = TracerTransparency
    TracerLine.Visible = false
end

-- Функция предсказания позиции
local function PredictPosition(targetRoot, humanoid)
    if not targetRoot or not humanoid then return targetRoot and targetRoot.Position or Vector3.new() end
    
    local position = targetRoot.Position
    local velocity = targetRoot.Velocity
    
    -- Выбираем offset в зависимости от направления движения
    local verticalOffset
    if velocity.Y > 0 then
        verticalOffset = velocity.Y * JumpOffset -- Для прыжка
    elseif velocity.Y < 0 then
        verticalOffset = velocity.Y * FallOffset -- Для падения
    else
        verticalOffset = 0 -- Нет вертикального движения
    end
    
    if PredictionMode == "Velocity" then
        return position + (velocity * Prediction) + Vector3.new(0, verticalOffset, 0)
    elseif PredictionMode == "MoveDirection" then
        local moveDirection = humanoid.MoveDirection
        if moveDirection ~= Vector3.new() then
            return position + (moveDirection.Unit * (Prediction * 10)) + Vector3.new(0, verticalOffset, 0)
        end
        return position + Vector3.new(0, verticalOffset, 0)
    elseif PredictionMode == "CalculateCFrame" then
        local currentTime = tick()
        local deltaTime = currentTime - (LastTime or currentTime)
        
        if not LastPosition or (position - LastPosition).Magnitude < 0.001 then
            LastPosition = position
            LastTime = currentTime
            return position + Vector3.new(0, verticalOffset, 0)
        end
        
        local distance = (position - LastPosition).Magnitude
        local speed = (distance / deltaTime) * (0.1 * (Prediction * 10))
        local predictedPos = position + (position - LastPosition).Unit * speed
        local verticalSpeed = (position.Y - LastPosition.Y) / deltaTime * (0.1 * Prediction)
        predictedPos = predictedPos + Vector3.new(0, verticalSpeed + verticalOffset, 0)
        
        LastPosition = position
        LastTime = currentTime
        return predictedPos
    end
    
    return position + Vector3.new(0, verticalOffset, 0)
end

-- Обновляем позицию трейсера (вызывается каждый кадр)
local function UpdateTracer()
    if not TracerLine or not Target or not Character then return end
    
    local Head = Character:FindFirstChild("Head")
    local TargetRoot = Target.Character and Target.Character:FindFirstChild("HumanoidRootPart")
    local TargetHumanoid = Target.Character and Target.Character:FindFirstChild("Humanoid")
    
    if Head and TargetRoot and TargetHumanoid then
        -- Предсказанная позиция
        local PredictedPos = PredictPosition(TargetRoot, TargetHumanoid)
        
        -- Преобразуем 3D-позиции в 2D-координаты экрана
        local HeadScreenPos, HeadVisible = Camera:WorldToViewportPoint(Head.Position)
        local PredictedScreenPos, PredictedVisible = Camera:WorldToViewportPoint(PredictedPos)
        
        if HeadVisible and PredictedVisible then
            TracerLine.From = Vector2.new(HeadScreenPos.X, HeadScreenPos.Y)
            TracerLine.To = Vector2.new(PredictedScreenPos.X, PredictedScreenPos.Y)
            TracerLine.Visible = true
        else
            TracerLine.Visible = false
        end
    else
        TracerLine.Visible = false
    end
end

-- Подключение обновления трейсера к RenderStepped
RunService.RenderStepped:Connect(UpdateTracer)

-- Функция для поиска ближайшего игрока к курсору
local function GetClosestToMouse()
    local ClosestTarget, ClosestDistance = nil, math.huge
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local Position, OnScreen = Camera:WorldToScreenPoint(player.Character.HumanoidRootPart.Position)
            local Distance = (Vector2.new(Position.X, Position.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude
            if Distance < ClosestDistance and OnScreen then
                ClosestDistance = Distance
                ClosestTarget = player
            end
        end
    end
    return ClosestTarget
end

-- Выбор цели по нажатию клавиши (с созданием трейсера)
UserInputService.InputBegan:Connect(function(Input, gameProcessedEvent)
    if gameProcessedEvent then return end
    if Input.KeyCode == Keybind then
        if Target == nil then
            Target = GetClosestToMouse()
            if Target then
                warn("Locked on to: " .. Target.Name)
                CreateTracer()
            else
                warn("No target found")
            end
        else
            warn("Unlocked from: " .. Target.Name)
            Target = nil
            LastPosition = nil -- Сбрасываем для CalculateCFrame
            LastTime = nil     -- Сбрасываем для CalculateCFrame
            if TracerLine then
                TracerLine.Visible = false
            end
        end
    end
end)

-- Обработка инструментов
local function SetupCharacter(char)
    Character = char
    char.ChildAdded:Connect(function(tool)
        if tool:IsA("Tool") then
            tool.Activated:Connect(function()
                if Target and Target.Character and Target.Character:FindFirstChild("HumanoidRootPart") and Target.Character:FindFirstChild("Humanoid") then
                    local TargetRoot = Target.Character.HumanoidRootPart
                    local TargetHumanoid = Target.Character.Humanoid
                    local PredictedPos = PredictPosition(TargetRoot, TargetHumanoid)
                    ReplicatedStorage.MainEvent:FireServer(
                        "UpdateMousePos", 
                        PredictedPos
                    )
                end
            end)
        end
    end)
end

-- Инициализация
CreateTracer()
if Character then SetupCharacter(Character) end
LocalPlayer.CharacterAdded:Connect(SetupCharacter)
