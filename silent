-- SETTINGS
local Keybind = Enum.KeyCode.C
local JumpOffset = 0.07
local FallOffset = 0.07 -- Новый параметр для падения
local Prediction = 0.141245121
local TracerColor = Color3.fromRGB(255, 50, 50) -- Цвет трейсера
local TracerThickness = 1.5                     -- Толщина линии
local TracerTransparency = 0.7                  -- Прозрачность

-- SERVICES
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

-- VARIABLES
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local Mouse = LocalPlayer:GetMouse()
local Target = nil
local Character = LocalPlayer.Character
local TracerLine = nil

-- Создаем трейсер через Drawing API
local function CreateTracer()
    if TracerLine then TracerLine:Remove() end
    TracerLine = Drawing.new("Line")
    TracerLine.Color = TracerColor
    TracerLine.Thickness = TracerThickness
    TracerLine.Transparency = TracerTransparency
    TracerLine.Visible = false
end

-- Обновляем позицию трейсера (вызывается каждый кадр)
local function UpdateTracer()
    if not TracerLine or not Target or not Character then return end
    
    local Head = Character:FindFirstChild("Head")
    local TargetRoot = Target.Character and Target.Character:FindFirstChild("HumanoidRootPart")
    
    if Head and TargetRoot then
        -- Выбираем offset в зависимости от направления движения
        local VerticalOffset
        if TargetRoot.Velocity.Y > 0 then
            VerticalOffset = TargetRoot.Velocity.Y * JumpOffset -- Для прыжка
        elseif TargetRoot.Velocity.Y < 0 then
            VerticalOffset = TargetRoot.Velocity.Y * FallOffset -- Для падения
        else
            VerticalOffset = 0 -- Нет вертикального движения
        end
        
        -- Предсказанная позиция с учетом скорости и VerticalOffset
        local PredictedPos = TargetRoot.Position + 
                            (TargetRoot.Velocity * Prediction) + 
                            Vector3.new(0, VerticalOffset, 0)
        
        -- Преобразуем 3D-позиции в 2D-координаты экрана
        local HeadScreenPos, HeadVisible = Camera:WorldToViewportPoint(Head.Position)
        local PredictedScreenPos, PredictedVisible = Camera:WorldToViewportPoint(PredictedPos)
        
        if HeadVisible and PredictedVisible then
            TracerLine.From = Vector2.new(HeadScreenPos.X, HeadScreenPos.Y)
            TracerLine.To = Vector2.new(PredictedScreenPos.X, PredictedScreenPos.Y)
            TracerLine.Visible = true
        else
            TracerLine.Visible = false
        end
    else
        TracerLine.Visible = false
    end
end

-- Подключение обновления трейсера к RenderStepped
RunService.RenderStepped:Connect(UpdateTracer)

-- Функция для поиска ближайшего игрока к курсору (без изменений)
local function GetClosestToMouse()
    local ClosestTarget, ClosestDistance = nil, math.huge
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local Position, OnScreen = Camera:WorldToScreenPoint(player.Character.HumanoidRootPart.Position)
            local Distance = (Vector2.new(Position.X, Position.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude
            if Distance < ClosestDistance and OnScreen then
                ClosestDistance = Distance
                ClosestTarget = player
            end
        end
    end
    return ClosestTarget
end

-- Выбор цели по нажатию клавиши (с созданием трейсера)
UserInputService.InputBegan:Connect(function(Input, gameProcessedEvent)
    if gameProcessedEvent then return end
    if Input.KeyCode == Keybind then
        if Target == nil then
            Target = GetClosestToMouse()
            if Target then
                warn("Locked on to: " .. Target.Name)
                CreateTracer()
            else
                warn("No target found")
            end
        else
            warn("Unlocked from: " .. Target.Name)
            Target = nil
            if TracerLine then
                TracerLine.Visible = false
            end
        end
    end
end)

-- Обработка инструментов
local function SetupCharacter(char)
    Character = char
    char.ChildAdded:Connect(function(tool)
        if tool:IsA("Tool") then
            tool.Activated:Connect(function()
                if Target and Target.Character and Target.Character:FindFirstChild("HumanoidRootPart") then
                    local Hit = Target.Character.HumanoidRootPart.CFrame.Position
                    local PlayerVelocity = Target.Character.HumanoidRootPart.Velocity
                    -- Выбираем offset в зависимости от направления движения
                    local VerticalOffset
                    if PlayerVelocity.Y > 0 then
                        VerticalOffset = PlayerVelocity.Y * JumpOffset -- Для прыжка
                    elseif PlayerVelocity.Y < 0 then
                        VerticalOffset = PlayerVelocity.Y * FallOffset -- Для падения
                    else
                        VerticalOffset = 0 -- Нет вертикального движения
                    end
                    ReplicatedStorage.MainEvent:FireServer(
                        "UpdateMousePos", 
                        Hit + (PlayerVelocity * Prediction) + Vector3.new(0, VerticalOffset, 0)
                    )
                end
            end)
        end
    end)
end

-- Инициализация
CreateTracer()
if Character then SetupCharacter(Character) end
LocalPlayer.CharacterAdded:Connect(SetupCharacter)
